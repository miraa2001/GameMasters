/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package databaseproj.databaseproject;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Rectangle;
import java.awt.RenderingHints;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.BorderFactory;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.UIManager;
import javax.swing.plaf.ColorUIResource;
import javax.swing.plaf.basic.BasicScrollBarUI;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;
import oracle.jdbc.pool.OracleDataSource;

/**
 *
 * @author miraj
 */
public class OrdersManagement extends javax.swing.JFrame {

    /**
     * Creates new form OrdersManagement
     */
    String firstname="";
    String username="";
    ScrollBarCustom SB=new ScrollBarCustom();
    public OrdersManagement(String fn,String u) {
        firstname=fn;
        username=u;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        DisplayOrders = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ShutDownLabel = new javax.swing.JLabel();
        ViewReport = new javax.swing.JButton();
        DeleteButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setBackground(new java.awt.Color(255, 233, 43));
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order ID", "Username", "Product ID", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setRowHeight(40);
        jScrollPane1.setViewportView(jTable1);

        jScrollPane1.setVerticalScrollBar(SB);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 60, 360, 300));

        DisplayOrders.setBackground(new java.awt.Color(255, 233, 43));
        DisplayOrders.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        DisplayOrders.setText("Display Orders");
        DisplayOrders.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisplayOrdersActionPerformed(evt);
            }
        });
        jPanel1.add(DisplayOrders, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 370, -1, 30));

        BackButton.setBackground(new java.awt.Color(255, 233, 43));
        BackButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BackButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\miraj\\Documents\\DatabaseProject\\Back.gif")); // NOI18N
        BackButton.setText("Back");
        BackButton.setBorder(new javax.swing.border.MatteBorder(null));
        BackButton.setFocusable(false);
        BackButton.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        BackButton.setIconTextGap(0);
        BackButton.setMinimumSize(new java.awt.Dimension(168, 38));
        BackButton.setName(""); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });
        jPanel1.add(BackButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 70, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Orders Management");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 10, -1, 40));

        ShutDownLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\miraj\\Documents\\DatabaseProject\\ShutDown.gif")); // NOI18N
        ShutDownLabel.setText("    ");
        ShutDownLabel.setToolTipText("");
        ShutDownLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        ShutDownLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ShutDownLabelMouseClicked(evt);
            }
        });
        jPanel1.add(ShutDownLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 70, 40));

        ViewReport.setBackground(new java.awt.Color(255, 233, 43));
        ViewReport.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ViewReport.setText("View Report");
        ViewReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewReportActionPerformed(evt);
            }
        });
        jPanel1.add(ViewReport, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, -1, 30));

        DeleteButton.setBackground(new java.awt.Color(255, 233, 43));
        DeleteButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        DeleteButton.setIcon(new javax.swing.ImageIcon("C:\\Users\\miraj\\Documents\\DatabaseProject\\DeleteCustomer.png")); // NOI18N
        DeleteButton.setText("Delete Order");
        DeleteButton.setBorder(new javax.swing.border.MatteBorder(null));
        DeleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteButtonActionPerformed(evt);
            }
        });
        jPanel1.add(DeleteButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 410, 130, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 550, 500));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void DisplayOrdersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisplayOrdersActionPerformed
        // TODO add your handling code here:
        try{
            OracleDataSource ods=new OracleDataSource();
            ods.setURL("jdbc:oracle:thin:@localhost:1521:orcl");
            ods.setUser("c##scott");
            ods.setPassword("tiger");
            Connection con=ods.getConnection();
            Statement stmt=con.createStatement();
            ResultSet rs=stmt.executeQuery("select * from orders order by id,product_id");
            DefaultTableModel tblModel= (DefaultTableModel) jTable1.getModel();
            
            tblModel.setRowCount(0);
            while(rs.next())
            {
                String id=rs.getString(1);
                String username=rs.getString(2);
                int pid=rs.getInt(3);
                int q=rs.getInt(4);
                String []data={id,username,""+pid,""+q};
                tblModel.addRow(data);
            }
            con.setAutoCommit(false);
            con.commit();
            con.close();
            }catch(Exception ex)
            {
                System.out.println(ex.toString());
            }
    }//GEN-LAST:event_DisplayOrdersActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        // TODO add your handling code here:
        this.toBack();
        AdministratorPortal AP=new AdministratorPortal(firstname,username);
        AP.setVisible(true);
        AP.toFront();
        this.dispose();
    }//GEN-LAST:event_BackButtonActionPerformed

    private void ShutDownLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShutDownLabelMouseClicked
        // TODO add your handling code here:
        UIManager UI=new UIManager();
        UI.put("OptionPane.background",new ColorUIResource(0,0,0));
        UI.put("OptionPane.messageForeground",new ColorUIResource(0,0,0));
        UI.put("Panel.background",new ColorUIResource(0,0,0));
        JLabel label = new JLabel ("Are you sure you want to exit this program?");
        label.setForeground(new java.awt.Color(255,233,43));
        ImageIcon icon=new ImageIcon("C:\\Users\\miraj\\OneDrive\\Desktop\\E-Learning (Mira)\\(7) Second Semester 2021-2022\\DataBase\\DatabaseProject\\Question.gif");
        int  result=JOptionPane .showOptionDialog(null, label, "", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE,icon, null,null);
        if(result==0)
        System.exit(0);
    }//GEN-LAST:event_ShutDownLabelMouseClicked

    private void ViewReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewReportActionPerformed
        // TODO add your handling code here:
        try{
        OracleDataSource ods= new OracleDataSource();
        ods.setUser("c##scott");
        ods.setPassword("tiger");
        ods.setURL("jdbc:oracle:thin:@localhost:1521:orcl");
        Connection con=ods.getConnection();
        InputStream input=new FileInputStream(new File("Orders.jrxml"));
        JasperDesign jd=JRXmlLoader.load(input);
        JasperReport jr=JasperCompileManager.compileReport(jd);
        JasperPrint jp=JasperFillManager.fillReport(jr,null,con);
        
        JFrame frame=new JFrame("Sales Report");
        frame.getContentPane().add(new JRViewer(jp));
        frame.setLocationRelativeTo(null);
        frame.pack();
        frame.setVisible(true);
        
        OutputStream os=new FileOutputStream(new File("Sales.pdf"));
        JasperExportManager.exportReportToPdfStream(jp,os);
        os.close();
        con.close();
        input.close();
        }catch(Exception ex)
        {
            System.out.println(ex.toString());
        }
    }//GEN-LAST:event_ViewReportActionPerformed

    private void DeleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteButtonActionPerformed
        // TODO add your handling code here:
        try{    
        String orderID="";
            UIManager UI=new UIManager();
            UI.put("OptionPane.background",new ColorUIResource(0,0,0));
            UI.put("OptionPane.messageForeground",new ColorUIResource(255,233,43));
            UI.put("Panel.background",new ColorUIResource(0,0,0));
            UI.put("Button.Background",new ColorUIResource(255,233,43));
            ImageIcon icon=new ImageIcon("C:\\Users\\miraj\\Documents\\DatabaseProject\\Question.gif");
            orderID=(String) JOptionPane.showInputDialog(this,"Please enter order id","Order Query", JOptionPane.INFORMATION_MESSAGE, icon, null, "");
            while(orderID.isEmpty())
            {
                ImageIcon icon1=new ImageIcon("C:\\Users\\miraj\\Documents\\DatabaseProject\\Error.gif");
                JOptionPane.showMessageDialog(this,"Order ID is empty, try again","Error",JOptionPane.ERROR_MESSAGE,icon1);
                orderID=(String) JOptionPane.showInputDialog(this,"Please enter order id","Order Query", JOptionPane.INFORMATION_MESSAGE, icon, null, ""); 
            }
            DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
            String url="jdbc:oracle:thin:@localhost:1521:orcl";
            Connection con=DriverManager.getConnection(url,"c##scott","tiger");
            con.setAutoCommit(false);
            String sqlStmt="delete from orders where id='"+orderID+"'";
            PreparedStatement PrS=con.prepareStatement(sqlStmt);
            ResultSet rs=PrS.executeQuery();
            con.commit(); 
            con.close();
        }catch(Exception ex)
        {
            System.out.println(ex.toString());
        }
            
    }//GEN-LAST:event_DeleteButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrdersManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrdersManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrdersManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrdersManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new OrdersManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JButton DeleteButton;
    private javax.swing.JButton DisplayOrders;
    private javax.swing.JLabel ShutDownLabel;
    private javax.swing.JButton ViewReport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
public class ScrollBarCustom extends JScrollBar {

    public ScrollBarCustom() {
        setUI(new ModernScrollBarUI());
        setPreferredSize(new Dimension(8, 8));
        setForeground(new Color(48, 144, 216));
        setBackground(Color.WHITE);
    }
}
public class ModernScrollBarUI extends BasicScrollBarUI {

    private final int THUMB_SIZE = 200;

    @Override
    protected Dimension getMaximumThumbSize() {
        if (scrollbar.getOrientation() == JScrollBar.VERTICAL) {
            return new Dimension(0, THUMB_SIZE);
        } else {
            return new Dimension(THUMB_SIZE, 0);
        }
    }

    @Override
    protected Dimension getMinimumThumbSize() {
        if (scrollbar.getOrientation() == JScrollBar.VERTICAL) {
            return new Dimension(0, THUMB_SIZE);
        } else {
            return new Dimension(THUMB_SIZE, 0);
        }
    }

    @Override
    protected JButton createIncreaseButton(int i) {
        return new ScrollBarButton();
    }

    @Override
    protected JButton createDecreaseButton(int i) {
        return new ScrollBarButton();
    }

    @Override
    protected void paintTrack(Graphics grphcs, JComponent jc, Rectangle rctngl) {
        Graphics2D g2 = (Graphics2D) grphcs;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        int orientation = scrollbar.getOrientation();
        int size;
        int x;
        int y;
        int width;
        int height;
        if (orientation == JScrollBar.VERTICAL) {
            size = rctngl.width / 2;
            x = rctngl.x + ((rctngl.width - size) / 2);
            y = rctngl.y;
            width = size;
            height = rctngl.height;
        } else {
            size = rctngl.height / 2;
            y = rctngl.y + ((rctngl.height - size) / 2);
            x = 0;
            width = rctngl.width;
            height = size;
        }
        g2.setColor(new Color(240, 240, 240));
        g2.fillRect(x, y, width, height);
    }

    @Override
    protected void paintThumb(Graphics grphcs, JComponent jc, Rectangle rctngl) {
        Graphics2D g2 = (Graphics2D) grphcs;
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        int x = rctngl.x;
        int y = rctngl.y;
        int width = rctngl.width;
        int height = rctngl.height;
        if (scrollbar.getOrientation() == JScrollBar.VERTICAL) {
            y += 8;
            height -= 10;
        } else {
            x += 8;
            width -= 10;
        }
        g2.setColor(scrollbar.getForeground());
        g2.fillRoundRect(x, y, width, height, 10, 10);
    }

    private class ScrollBarButton extends JButton {

        public ScrollBarButton() {
            setBorder(BorderFactory.createEmptyBorder());
        }

        @Override
        public void paint(Graphics grphcs) {
        }
    }
}
}
